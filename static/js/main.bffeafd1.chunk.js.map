{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","newTodos","maxId","Math","max","App","useState","activeUser","setActiveUser","message","setMessage","visibleTodos","setVisibleTodos","hasMessageError","setHasMessageError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","updatedTodo","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bffeafd1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article className={classNames(\n    'TodoInfo',\n    {\n      'TodoInfo--completed': todo.completed,\n    },\n  )}\n  >\n\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && (<UserInfo user={todo.user} />)}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number) {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst newTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nlet maxId = Math.max(...newTodos.map(todo => todo.id));\n\nexport const App: React.FC = () => {\n  const [activeUser, setActiveUser] = useState(0);\n  const [message, setMessage] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState(newTodos);\n  const [hasMessageError, setHasMessageError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const newTodo = () => {\n    maxId += 1;\n\n    return {\n      id: maxId,\n      title: message,\n      completed: false,\n      userId: activeUser,\n      user: getUser(activeUser),\n    };\n  };\n\n  const handleAdd = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setHasMessageError(!message);\n    setHasUserError(!activeUser);\n\n    if (message && activeUser) {\n      const updatedTodo = newTodo();\n\n      setVisibleTodos([\n        ...visibleTodos,\n        updatedTodo,\n      ]);\n    }\n\n    setMessage('');\n    setActiveUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"Get\" onSubmit={handleAdd}>\n        <div className=\"field\">\n          <span>Title: </span>\n          <input\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={message}\n            onChange={(event) => {\n              setMessage(event.target.value);\n            }}\n          />\n          {hasMessageError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <span>User: </span>\n\n          <select\n            data-cy=\"userSelect\"\n            value={activeUser}\n            onChange={(event) => {\n              setActiveUser(+event.target.value);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}